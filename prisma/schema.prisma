// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Video {
  id          String       @id @default(cuid())
  title       String
  userId      String
  status      String       @default("PROCESSING") // PROCESSING, COMPLETED, FAILED
  url         String?
  durationInSeconds    Float?       // Duration in seconds
  thumbnailUrl   String?      // Thumbnail URL
  description String?      // Optional description
  shorts      VideoShort[] // Relation to generated shorts
  settings    ProcessingSettings? // Processing settings
  captions    Caption[]    // Video captions
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model VideoShort {
  id          String   @id @default(cuid())
  videoId     String
  video       Video    @relation(fields: [videoId], references: [id])
  title       String
  url         String
  durationInSeconds    Float    // Duration in seconds
  thumbnailUrl   String?  // Thumbnail URL
  startTime   Float    // Start time in original video
  endTime     Float    // End time in original video
  userId      String
  filter      String?  // Applied video filter
  captions    Caption[] // Short captions
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProcessingSettings {
  id                  String   @id @default(cuid())
  videoId             String   @unique
  video               Video    @relation(fields: [videoId], references: [id])
  segmentDuration     Int      @default(15)
  enableSceneDetection Boolean  @default(true)
  enableCaptions      Boolean  @default(false)
  enableFilters       Boolean  @default(false)
  selectedFilter      String   @default("none")
  minSegmentLength    Int      @default(10)
  maxSegments         Int      @default(5)
  selectedSegments    String   @default("")
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model Caption {
  id          String   @id @default(cuid())
  text        String
  startTime   Float
  endTime     Float
  videoId     String?
  video       Video?   @relation(fields: [videoId], references: [id])
  shortId     String?
  short       VideoShort? @relation(fields: [shortId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([videoId])
  @@index([shortId])
} 